#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CodeWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLTiemChungVaccine")]
	public partial class VaccineDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietHoaDon(ChiTietHoaDon instance);
    partial void UpdateChiTietHoaDon(ChiTietHoaDon instance);
    partial void DeleteChiTietHoaDon(ChiTietHoaDon instance);
    partial void InsertVaccine(Vaccine instance);
    partial void UpdateVaccine(Vaccine instance);
    partial void DeleteVaccine(Vaccine instance);
    partial void InsertGioHang(GioHang instance);
    partial void UpdateGioHang(GioHang instance);
    partial void DeleteGioHang(GioHang instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiVaccine(LoaiVaccine instance);
    partial void UpdateLoaiVaccine(LoaiVaccine instance);
    partial void DeleteLoaiVaccine(LoaiVaccine instance);
    partial void InsertLoVaccine(LoVaccine instance);
    partial void UpdateLoVaccine(LoVaccine instance);
    partial void DeleteLoVaccine(LoVaccine instance);
    partial void InsertMoiQuanHe(MoiQuanHe instance);
    partial void UpdateMoiQuanHe(MoiQuanHe instance);
    partial void DeleteMoiQuanHe(MoiQuanHe instance);
    partial void InsertNguoiTiemChung(NguoiTiemChung instance);
    partial void UpdateNguoiTiemChung(NguoiTiemChung instance);
    partial void DeleteNguoiTiemChung(NguoiTiemChung instance);
    partial void InsertNhaCC(NhaCC instance);
    partial void UpdateNhaCC(NhaCC instance);
    partial void DeleteNhaCC(NhaCC instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhapKho(NhapKho instance);
    partial void UpdateNhapKho(NhapKho instance);
    partial void DeleteNhapKho(NhapKho instance);
    partial void InsertNhomVaccine(NhomVaccine instance);
    partial void UpdateNhomVaccine(NhomVaccine instance);
    partial void DeleteNhomVaccine(NhomVaccine instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public VaccineDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QLTiemChungVaccineConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public VaccineDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VaccineDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VaccineDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VaccineDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this.GetTable<ChiTietHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<Vaccine> Vaccines
		{
			get
			{
				return this.GetTable<Vaccine>();
			}
		}
		
		public System.Data.Linq.Table<GioHang> GioHangs
		{
			get
			{
				return this.GetTable<GioHang>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiVaccine> LoaiVaccines
		{
			get
			{
				return this.GetTable<LoaiVaccine>();
			}
		}
		
		public System.Data.Linq.Table<LoVaccine> LoVaccines
		{
			get
			{
				return this.GetTable<LoVaccine>();
			}
		}
		
		public System.Data.Linq.Table<MoiQuanHe> MoiQuanHes
		{
			get
			{
				return this.GetTable<MoiQuanHe>();
			}
		}
		
		public System.Data.Linq.Table<NguoiTiemChung> NguoiTiemChungs
		{
			get
			{
				return this.GetTable<NguoiTiemChung>();
			}
		}
		
		public System.Data.Linq.Table<NhaCC> NhaCCs
		{
			get
			{
				return this.GetTable<NhaCC>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhapKho> NhapKhos
		{
			get
			{
				return this.GetTable<NhapKho>();
			}
		}
		
		public System.Data.Linq.Table<NhomVaccine> NhomVaccines
		{
			get
			{
				return this.GetTable<NhomVaccine>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDon")]
	public partial class ChiTietHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHD;
		
		private int _MaVC;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntityRef<Vaccine> _Vaccine;
		
		private EntityRef<HoaDon> _HoaDon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnMaVCChanging(int value);
    partial void OnMaVCChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public ChiTietHoaDon()
		{
			this._Vaccine = default(EntityRef<Vaccine>);
			this._HoaDon = default(EntityRef<HoaDon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaVC
		{
			get
			{
				return this._MaVC;
			}
			set
			{
				if ((this._MaVC != value))
				{
					if (this._Vaccine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVCChanging(value);
					this.SendPropertyChanging();
					this._MaVC = value;
					this.SendPropertyChanged("MaVC");
					this.OnMaVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vaccine_ChiTietHoaDon", Storage="_Vaccine", ThisKey="MaVC", OtherKey="MaVC", IsForeignKey=true)]
		public Vaccine Vaccine
		{
			get
			{
				return this._Vaccine.Entity;
			}
			set
			{
				Vaccine previousValue = this._Vaccine.Entity;
				if (((previousValue != value) 
							|| (this._Vaccine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vaccine.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._Vaccine.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._MaVC = value.MaVC;
					}
					else
					{
						this._MaVC = default(int);
					}
					this.SendPropertyChanged("Vaccine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_HoaDon", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(int);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vaccine")]
	public partial class Vaccine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaVC;
		
		private string _TenVC;
		
		private string _HinhAnhVC;
		
		private string _NguonGocVC;
		
		private string _MoTaVC;
		
		private string _TinhTrangVC;
		
		private System.Nullable<int> _GiaBanVC;
		
		private System.Nullable<int> _GiaNhapVC;
		
		private System.Nullable<int> _SoLuongVC;
		
		private System.Nullable<int> _MaLoai;
		
		private System.Nullable<int> _MaNhom;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntitySet<LoVaccine> _LoVaccines;
		
		private EntityRef<LoaiVaccine> _LoaiVaccine;
		
		private EntityRef<NhomVaccine> _NhomVaccine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaVCChanging(int value);
    partial void OnMaVCChanged();
    partial void OnTenVCChanging(string value);
    partial void OnTenVCChanged();
    partial void OnHinhAnhVCChanging(string value);
    partial void OnHinhAnhVCChanged();
    partial void OnNguonGocVCChanging(string value);
    partial void OnNguonGocVCChanged();
    partial void OnMoTaVCChanging(string value);
    partial void OnMoTaVCChanged();
    partial void OnTinhTrangVCChanging(string value);
    partial void OnTinhTrangVCChanged();
    partial void OnGiaBanVCChanging(System.Nullable<int> value);
    partial void OnGiaBanVCChanged();
    partial void OnGiaNhapVCChanging(System.Nullable<int> value);
    partial void OnGiaNhapVCChanged();
    partial void OnSoLuongVCChanging(System.Nullable<int> value);
    partial void OnSoLuongVCChanged();
    partial void OnMaLoaiChanging(System.Nullable<int> value);
    partial void OnMaLoaiChanged();
    partial void OnMaNhomChanging(System.Nullable<int> value);
    partial void OnMaNhomChanged();
    #endregion
		
		public Vaccine()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._LoVaccines = new EntitySet<LoVaccine>(new Action<LoVaccine>(this.attach_LoVaccines), new Action<LoVaccine>(this.detach_LoVaccines));
			this._LoaiVaccine = default(EntityRef<LoaiVaccine>);
			this._NhomVaccine = default(EntityRef<NhomVaccine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaVC
		{
			get
			{
				return this._MaVC;
			}
			set
			{
				if ((this._MaVC != value))
				{
					this.OnMaVCChanging(value);
					this.SendPropertyChanging();
					this._MaVC = value;
					this.SendPropertyChanged("MaVC");
					this.OnMaVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenVC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenVC
		{
			get
			{
				return this._TenVC;
			}
			set
			{
				if ((this._TenVC != value))
				{
					this.OnTenVCChanging(value);
					this.SendPropertyChanging();
					this._TenVC = value;
					this.SendPropertyChanged("TenVC");
					this.OnTenVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnhVC", DbType="NVarChar(MAX)")]
		public string HinhAnhVC
		{
			get
			{
				return this._HinhAnhVC;
			}
			set
			{
				if ((this._HinhAnhVC != value))
				{
					this.OnHinhAnhVCChanging(value);
					this.SendPropertyChanging();
					this._HinhAnhVC = value;
					this.SendPropertyChanged("HinhAnhVC");
					this.OnHinhAnhVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NguonGocVC", DbType="NVarChar(50)")]
		public string NguonGocVC
		{
			get
			{
				return this._NguonGocVC;
			}
			set
			{
				if ((this._NguonGocVC != value))
				{
					this.OnNguonGocVCChanging(value);
					this.SendPropertyChanging();
					this._NguonGocVC = value;
					this.SendPropertyChanged("NguonGocVC");
					this.OnNguonGocVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaVC", DbType="NVarChar(MAX)")]
		public string MoTaVC
		{
			get
			{
				return this._MoTaVC;
			}
			set
			{
				if ((this._MoTaVC != value))
				{
					this.OnMoTaVCChanging(value);
					this.SendPropertyChanging();
					this._MoTaVC = value;
					this.SendPropertyChanged("MoTaVC");
					this.OnMoTaVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangVC", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string TinhTrangVC
		{
			get
			{
				return this._TinhTrangVC;
			}
			set
			{
				if ((this._TinhTrangVC != value))
				{
					this.OnTinhTrangVCChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangVC = value;
					this.SendPropertyChanged("TinhTrangVC");
					this.OnTinhTrangVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBanVC", DbType="Int")]
		public System.Nullable<int> GiaBanVC
		{
			get
			{
				return this._GiaBanVC;
			}
			set
			{
				if ((this._GiaBanVC != value))
				{
					this.OnGiaBanVCChanging(value);
					this.SendPropertyChanging();
					this._GiaBanVC = value;
					this.SendPropertyChanged("GiaBanVC");
					this.OnGiaBanVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaNhapVC", DbType="Int")]
		public System.Nullable<int> GiaNhapVC
		{
			get
			{
				return this._GiaNhapVC;
			}
			set
			{
				if ((this._GiaNhapVC != value))
				{
					this.OnGiaNhapVCChanging(value);
					this.SendPropertyChanging();
					this._GiaNhapVC = value;
					this.SendPropertyChanged("GiaNhapVC");
					this.OnGiaNhapVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongVC", DbType="Int")]
		public System.Nullable<int> SoLuongVC
		{
			get
			{
				return this._SoLuongVC;
			}
			set
			{
				if ((this._SoLuongVC != value))
				{
					this.OnSoLuongVCChanging(value);
					this.SendPropertyChanging();
					this._SoLuongVC = value;
					this.SendPropertyChanged("SoLuongVC");
					this.OnSoLuongVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int")]
		public System.Nullable<int> MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiVaccine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", DbType="Int")]
		public System.Nullable<int> MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					if (this._NhomVaccine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vaccine_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="MaVC", OtherKey="MaVC")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vaccine_GioHang", Storage="_GioHangs", ThisKey="MaVC", OtherKey="MaVC")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vaccine_LoVaccine", Storage="_LoVaccines", ThisKey="MaVC", OtherKey="MaVC")]
		public EntitySet<LoVaccine> LoVaccines
		{
			get
			{
				return this._LoVaccines;
			}
			set
			{
				this._LoVaccines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiVaccine_Vaccine", Storage="_LoaiVaccine", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiVaccine LoaiVaccine
		{
			get
			{
				return this._LoaiVaccine.Entity;
			}
			set
			{
				LoaiVaccine previousValue = this._LoaiVaccine.Entity;
				if (((previousValue != value) 
							|| (this._LoaiVaccine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiVaccine.Entity = null;
						previousValue.Vaccines.Remove(this);
					}
					this._LoaiVaccine.Entity = value;
					if ((value != null))
					{
						value.Vaccines.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiVaccine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomVaccine_Vaccine", Storage="_NhomVaccine", ThisKey="MaNhom", OtherKey="MaNhom", IsForeignKey=true)]
		public NhomVaccine NhomVaccine
		{
			get
			{
				return this._NhomVaccine.Entity;
			}
			set
			{
				NhomVaccine previousValue = this._NhomVaccine.Entity;
				if (((previousValue != value) 
							|| (this._NhomVaccine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhomVaccine.Entity = null;
						previousValue.Vaccines.Remove(this);
					}
					this._NhomVaccine.Entity = value;
					if ((value != null))
					{
						value.Vaccines.Add(this);
						this._MaNhom = value.MaNhom;
					}
					else
					{
						this._MaNhom = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhomVaccine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Vaccine = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Vaccine = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.Vaccine = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.Vaccine = null;
		}
		
		private void attach_LoVaccines(LoVaccine entity)
		{
			this.SendPropertyChanging();
			entity.Vaccine = this;
		}
		
		private void detach_LoVaccines(LoVaccine entity)
		{
			this.SendPropertyChanging();
			entity.Vaccine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioHang")]
	public partial class GioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private int _MaVC;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _TongThanhTien;
		
		private System.Nullable<int> _TongSL;
		
		private EntityRef<Vaccine> _Vaccine;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnMaVCChanging(int value);
    partial void OnMaVCChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTongThanhTienChanging(System.Nullable<int> value);
    partial void OnTongThanhTienChanged();
    partial void OnTongSLChanging(System.Nullable<int> value);
    partial void OnTongSLChanged();
    #endregion
		
		public GioHang()
		{
			this._Vaccine = default(EntityRef<Vaccine>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaVC
		{
			get
			{
				return this._MaVC;
			}
			set
			{
				if ((this._MaVC != value))
				{
					if (this._Vaccine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVCChanging(value);
					this.SendPropertyChanging();
					this._MaVC = value;
					this.SendPropertyChanged("MaVC");
					this.OnMaVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongThanhTien", DbType="Int")]
		public System.Nullable<int> TongThanhTien
		{
			get
			{
				return this._TongThanhTien;
			}
			set
			{
				if ((this._TongThanhTien != value))
				{
					this.OnTongThanhTienChanging(value);
					this.SendPropertyChanging();
					this._TongThanhTien = value;
					this.SendPropertyChanged("TongThanhTien");
					this.OnTongThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSL", DbType="Int")]
		public System.Nullable<int> TongSL
		{
			get
			{
				return this._TongSL;
			}
			set
			{
				if ((this._TongSL != value))
				{
					this.OnTongSLChanging(value);
					this.SendPropertyChanging();
					this._TongSL = value;
					this.SendPropertyChanged("TongSL");
					this.OnTongSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vaccine_GioHang", Storage="_Vaccine", ThisKey="MaVC", OtherKey="MaVC", IsForeignKey=true)]
		public Vaccine Vaccine
		{
			get
			{
				return this._Vaccine.Entity;
			}
			set
			{
				Vaccine previousValue = this._Vaccine.Entity;
				if (((previousValue != value) 
							|| (this._Vaccine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vaccine.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._Vaccine.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._MaVC = value.MaVC;
					}
					else
					{
						this._MaVC = default(int);
					}
					this.SendPropertyChanged("Vaccine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_GioHang", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHD;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private System.Nullable<int> _MaNTC;
		
		private System.Nullable<System.DateTime> _ThoiGianTiem;
		
		private System.Nullable<int> _TongSL;
		
		private System.Nullable<int> _TongTien;
		
		private string _TrangThaiHD;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntityRef<NguoiTiemChung> _NguoiTiemChung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnMaNTCChanging(System.Nullable<int> value);
    partial void OnMaNTCChanged();
    partial void OnThoiGianTiemChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianTiemChanged();
    partial void OnTongSLChanging(System.Nullable<int> value);
    partial void OnTongSLChanged();
    partial void OnTongTienChanging(System.Nullable<int> value);
    partial void OnTongTienChanged();
    partial void OnTrangThaiHDChanging(string value);
    partial void OnTrangThaiHDChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._NguoiTiemChung = default(EntityRef<NguoiTiemChung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNTC", DbType="Int")]
		public System.Nullable<int> MaNTC
		{
			get
			{
				return this._MaNTC;
			}
			set
			{
				if ((this._MaNTC != value))
				{
					if (this._NguoiTiemChung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNTCChanging(value);
					this.SendPropertyChanging();
					this._MaNTC = value;
					this.SendPropertyChanged("MaNTC");
					this.OnMaNTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianTiem", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianTiem
		{
			get
			{
				return this._ThoiGianTiem;
			}
			set
			{
				if ((this._ThoiGianTiem != value))
				{
					this.OnThoiGianTiemChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianTiem = value;
					this.SendPropertyChanged("ThoiGianTiem");
					this.OnThoiGianTiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSL", DbType="Int")]
		public System.Nullable<int> TongSL
		{
			get
			{
				return this._TongSL;
			}
			set
			{
				if ((this._TongSL != value))
				{
					this.OnTongSLChanging(value);
					this.SendPropertyChanging();
					this._TongSL = value;
					this.SendPropertyChanged("TongSL");
					this.OnTongSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Int")]
		public System.Nullable<int> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiHD", DbType="NVarChar(100)")]
		public string TrangThaiHD
		{
			get
			{
				return this._TrangThaiHD;
			}
			set
			{
				if ((this._TrangThaiHD != value))
				{
					this.OnTrangThaiHDChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiHD = value;
					this.SendPropertyChanged("TrangThaiHD");
					this.OnTrangThaiHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiTiemChung_HoaDon", Storage="_NguoiTiemChung", ThisKey="MaNTC", OtherKey="MaNTC", IsForeignKey=true)]
		public NguoiTiemChung NguoiTiemChung
		{
			get
			{
				return this._NguoiTiemChung.Entity;
			}
			set
			{
				NguoiTiemChung previousValue = this._NguoiTiemChung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiTiemChung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiTiemChung.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NguoiTiemChung.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaNTC = value.MaNTC;
					}
					else
					{
						this._MaNTC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiTiemChung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTenKH;
		
		private string _GioiTinhKH;
		
		private System.DateTime _NgaySinhKH;
		
		private string _SoDienThoaiKH;
		
		private string _EmailKH;
		
		private string _DiaChiKH;
		
		private string _TenTK;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntitySet<NguoiTiemChung> _NguoiTiemChungs;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenKHChanging(string value);
    partial void OnHoTenKHChanged();
    partial void OnGioiTinhKHChanging(string value);
    partial void OnGioiTinhKHChanged();
    partial void OnNgaySinhKHChanging(System.DateTime value);
    partial void OnNgaySinhKHChanged();
    partial void OnSoDienThoaiKHChanging(string value);
    partial void OnSoDienThoaiKHChanged();
    partial void OnEmailKHChanging(string value);
    partial void OnEmailKHChanged();
    partial void OnDiaChiKHChanging(string value);
    partial void OnDiaChiKHChanged();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    #endregion
		
		public KhachHang()
		{
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._NguoiTiemChungs = new EntitySet<NguoiTiemChung>(new Action<NguoiTiemChung>(this.attach_NguoiTiemChungs), new Action<NguoiTiemChung>(this.detach_NguoiTiemChungs));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTenKH
		{
			get
			{
				return this._HoTenKH;
			}
			set
			{
				if ((this._HoTenKH != value))
				{
					this.OnHoTenKHChanging(value);
					this.SendPropertyChanging();
					this._HoTenKH = value;
					this.SendPropertyChanged("HoTenKH");
					this.OnHoTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinhKH", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string GioiTinhKH
		{
			get
			{
				return this._GioiTinhKH;
			}
			set
			{
				if ((this._GioiTinhKH != value))
				{
					this.OnGioiTinhKHChanging(value);
					this.SendPropertyChanging();
					this._GioiTinhKH = value;
					this.SendPropertyChanged("GioiTinhKH");
					this.OnGioiTinhKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhKH", DbType="Date NOT NULL")]
		public System.DateTime NgaySinhKH
		{
			get
			{
				return this._NgaySinhKH;
			}
			set
			{
				if ((this._NgaySinhKH != value))
				{
					this.OnNgaySinhKHChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhKH = value;
					this.SendPropertyChanged("NgaySinhKH");
					this.OnNgaySinhKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoaiKH", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SoDienThoaiKH
		{
			get
			{
				return this._SoDienThoaiKH;
			}
			set
			{
				if ((this._SoDienThoaiKH != value))
				{
					this.OnSoDienThoaiKHChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoaiKH = value;
					this.SendPropertyChanged("SoDienThoaiKH");
					this.OnSoDienThoaiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailKH", DbType="VarChar(50)")]
		public string EmailKH
		{
			get
			{
				return this._EmailKH;
			}
			set
			{
				if ((this._EmailKH != value))
				{
					this.OnEmailKHChanging(value);
					this.SendPropertyChanging();
					this._EmailKH = value;
					this.SendPropertyChanged("EmailKH");
					this.OnEmailKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKH", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChiKH
		{
			get
			{
				return this._DiaChiKH;
			}
			set
			{
				if ((this._DiaChiKH != value))
				{
					this.OnDiaChiKHChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKH = value;
					this.SendPropertyChanged("DiaChiKH");
					this.OnDiaChiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="VarChar(30)")]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_GioHang", Storage="_GioHangs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_NguoiTiemChung", Storage="_NguoiTiemChungs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<NguoiTiemChung> NguoiTiemChungs
		{
			get
			{
				return this._NguoiTiemChungs;
			}
			set
			{
				this._NguoiTiemChungs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KhachHang", Storage="_TaiKhoan", ThisKey="TenTK", OtherKey="TenTK", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.KhachHangs.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.KhachHangs.Add(this);
						this._TenTK = value.TenTK;
					}
					else
					{
						this._TenTK = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_NguoiTiemChungs(NguoiTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_NguoiTiemChungs(NguoiTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiVaccine")]
	public partial class LoaiVaccine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<Vaccine> _Vaccines;
		
		private EntitySet<NhomVaccine> _NhomVaccines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiVaccine()
		{
			this._Vaccines = new EntitySet<Vaccine>(new Action<Vaccine>(this.attach_Vaccines), new Action<Vaccine>(this.detach_Vaccines));
			this._NhomVaccines = new EntitySet<NhomVaccine>(new Action<NhomVaccine>(this.attach_NhomVaccines), new Action<NhomVaccine>(this.detach_NhomVaccines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiVaccine_Vaccine", Storage="_Vaccines", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<Vaccine> Vaccines
		{
			get
			{
				return this._Vaccines;
			}
			set
			{
				this._Vaccines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiVaccine_NhomVaccine", Storage="_NhomVaccines", ThisKey="MaLoai", OtherKey="MaLoai")]
		public EntitySet<NhomVaccine> NhomVaccines
		{
			get
			{
				return this._NhomVaccines;
			}
			set
			{
				this._NhomVaccines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vaccines(Vaccine entity)
		{
			this.SendPropertyChanging();
			entity.LoaiVaccine = this;
		}
		
		private void detach_Vaccines(Vaccine entity)
		{
			this.SendPropertyChanging();
			entity.LoaiVaccine = null;
		}
		
		private void attach_NhomVaccines(NhomVaccine entity)
		{
			this.SendPropertyChanging();
			entity.LoaiVaccine = this;
		}
		
		private void detach_NhomVaccines(NhomVaccine entity)
		{
			this.SendPropertyChanging();
			entity.LoaiVaccine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoVaccine")]
	public partial class LoVaccine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoVC;
		
		private System.Nullable<System.DateTime> _HanSuDung;
		
		private System.Nullable<int> _MaVC;
		
		private System.Nullable<int> _SoLuongLoVC;
		
		private EntitySet<NhapKho> _NhapKhos;
		
		private EntityRef<Vaccine> _Vaccine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoVCChanging(int value);
    partial void OnMaLoVCChanged();
    partial void OnHanSuDungChanging(System.Nullable<System.DateTime> value);
    partial void OnHanSuDungChanged();
    partial void OnMaVCChanging(System.Nullable<int> value);
    partial void OnMaVCChanged();
    partial void OnSoLuongLoVCChanging(System.Nullable<int> value);
    partial void OnSoLuongLoVCChanged();
    #endregion
		
		public LoVaccine()
		{
			this._NhapKhos = new EntitySet<NhapKho>(new Action<NhapKho>(this.attach_NhapKhos), new Action<NhapKho>(this.detach_NhapKhos));
			this._Vaccine = default(EntityRef<Vaccine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoVC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoVC
		{
			get
			{
				return this._MaLoVC;
			}
			set
			{
				if ((this._MaLoVC != value))
				{
					this.OnMaLoVCChanging(value);
					this.SendPropertyChanging();
					this._MaLoVC = value;
					this.SendPropertyChanged("MaLoVC");
					this.OnMaLoVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HanSuDung", DbType="DateTime")]
		public System.Nullable<System.DateTime> HanSuDung
		{
			get
			{
				return this._HanSuDung;
			}
			set
			{
				if ((this._HanSuDung != value))
				{
					this.OnHanSuDungChanging(value);
					this.SendPropertyChanging();
					this._HanSuDung = value;
					this.SendPropertyChanged("HanSuDung");
					this.OnHanSuDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaVC", DbType="Int")]
		public System.Nullable<int> MaVC
		{
			get
			{
				return this._MaVC;
			}
			set
			{
				if ((this._MaVC != value))
				{
					if (this._Vaccine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaVCChanging(value);
					this.SendPropertyChanging();
					this._MaVC = value;
					this.SendPropertyChanged("MaVC");
					this.OnMaVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongLoVC", DbType="Int")]
		public System.Nullable<int> SoLuongLoVC
		{
			get
			{
				return this._SoLuongLoVC;
			}
			set
			{
				if ((this._SoLuongLoVC != value))
				{
					this.OnSoLuongLoVCChanging(value);
					this.SendPropertyChanging();
					this._SoLuongLoVC = value;
					this.SendPropertyChanged("SoLuongLoVC");
					this.OnSoLuongLoVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoVaccine_NhapKho", Storage="_NhapKhos", ThisKey="MaLoVC", OtherKey="MaLoVC")]
		public EntitySet<NhapKho> NhapKhos
		{
			get
			{
				return this._NhapKhos;
			}
			set
			{
				this._NhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vaccine_LoVaccine", Storage="_Vaccine", ThisKey="MaVC", OtherKey="MaVC", IsForeignKey=true)]
		public Vaccine Vaccine
		{
			get
			{
				return this._Vaccine.Entity;
			}
			set
			{
				Vaccine previousValue = this._Vaccine.Entity;
				if (((previousValue != value) 
							|| (this._Vaccine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vaccine.Entity = null;
						previousValue.LoVaccines.Remove(this);
					}
					this._Vaccine.Entity = value;
					if ((value != null))
					{
						value.LoVaccines.Add(this);
						this._MaVC = value.MaVC;
					}
					else
					{
						this._MaVC = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vaccine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.LoVaccine = this;
		}
		
		private void detach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.LoVaccine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MoiQuanHe")]
	public partial class MoiQuanHe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQH;
		
		private string _TenQH;
		
		private EntitySet<NguoiTiemChung> _NguoiTiemChungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQHChanging(int value);
    partial void OnMaQHChanged();
    partial void OnTenQHChanging(string value);
    partial void OnTenQHChanged();
    #endregion
		
		public MoiQuanHe()
		{
			this._NguoiTiemChungs = new EntitySet<NguoiTiemChung>(new Action<NguoiTiemChung>(this.attach_NguoiTiemChungs), new Action<NguoiTiemChung>(this.detach_NguoiTiemChungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQH
		{
			get
			{
				return this._MaQH;
			}
			set
			{
				if ((this._MaQH != value))
				{
					this.OnMaQHChanging(value);
					this.SendPropertyChanging();
					this._MaQH = value;
					this.SendPropertyChanged("MaQH");
					this.OnMaQHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQH", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenQH
		{
			get
			{
				return this._TenQH;
			}
			set
			{
				if ((this._TenQH != value))
				{
					this.OnTenQHChanging(value);
					this.SendPropertyChanging();
					this._TenQH = value;
					this.SendPropertyChanged("TenQH");
					this.OnTenQHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MoiQuanHe_NguoiTiemChung", Storage="_NguoiTiemChungs", ThisKey="MaQH", OtherKey="MaQH")]
		public EntitySet<NguoiTiemChung> NguoiTiemChungs
		{
			get
			{
				return this._NguoiTiemChungs;
			}
			set
			{
				this._NguoiTiemChungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiTiemChungs(NguoiTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.MoiQuanHe = this;
		}
		
		private void detach_NguoiTiemChungs(NguoiTiemChung entity)
		{
			this.SendPropertyChanging();
			entity.MoiQuanHe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiTiemChung")]
	public partial class NguoiTiemChung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNTC;
		
		private string _HoTenNTC;
		
		private string _GioiTinhNTC;
		
		private System.DateTime _NgaySinhNTC;
		
		private string _SoDienThoaiNTC;
		
		private string _DiaChiNTC;
		
		private System.Nullable<int> _MaQH;
		
		private System.Nullable<int> _MaKH;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<MoiQuanHe> _MoiQuanHe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNTCChanging(int value);
    partial void OnMaNTCChanged();
    partial void OnHoTenNTCChanging(string value);
    partial void OnHoTenNTCChanged();
    partial void OnGioiTinhNTCChanging(string value);
    partial void OnGioiTinhNTCChanged();
    partial void OnNgaySinhNTCChanging(System.DateTime value);
    partial void OnNgaySinhNTCChanged();
    partial void OnSoDienThoaiNTCChanging(string value);
    partial void OnSoDienThoaiNTCChanged();
    partial void OnDiaChiNTCChanging(string value);
    partial void OnDiaChiNTCChanged();
    partial void OnMaQHChanging(System.Nullable<int> value);
    partial void OnMaQHChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    #endregion
		
		public NguoiTiemChung()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._KhachHang = default(EntityRef<KhachHang>);
			this._MoiQuanHe = default(EntityRef<MoiQuanHe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNTC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNTC
		{
			get
			{
				return this._MaNTC;
			}
			set
			{
				if ((this._MaNTC != value))
				{
					this.OnMaNTCChanging(value);
					this.SendPropertyChanging();
					this._MaNTC = value;
					this.SendPropertyChanged("MaNTC");
					this.OnMaNTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNTC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTenNTC
		{
			get
			{
				return this._HoTenNTC;
			}
			set
			{
				if ((this._HoTenNTC != value))
				{
					this.OnHoTenNTCChanging(value);
					this.SendPropertyChanging();
					this._HoTenNTC = value;
					this.SendPropertyChanged("HoTenNTC");
					this.OnHoTenNTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinhNTC", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string GioiTinhNTC
		{
			get
			{
				return this._GioiTinhNTC;
			}
			set
			{
				if ((this._GioiTinhNTC != value))
				{
					this.OnGioiTinhNTCChanging(value);
					this.SendPropertyChanging();
					this._GioiTinhNTC = value;
					this.SendPropertyChanged("GioiTinhNTC");
					this.OnGioiTinhNTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhNTC", DbType="Date NOT NULL")]
		public System.DateTime NgaySinhNTC
		{
			get
			{
				return this._NgaySinhNTC;
			}
			set
			{
				if ((this._NgaySinhNTC != value))
				{
					this.OnNgaySinhNTCChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhNTC = value;
					this.SendPropertyChanged("NgaySinhNTC");
					this.OnNgaySinhNTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoaiNTC", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SoDienThoaiNTC
		{
			get
			{
				return this._SoDienThoaiNTC;
			}
			set
			{
				if ((this._SoDienThoaiNTC != value))
				{
					this.OnSoDienThoaiNTCChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoaiNTC = value;
					this.SendPropertyChanged("SoDienThoaiNTC");
					this.OnSoDienThoaiNTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNTC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChiNTC
		{
			get
			{
				return this._DiaChiNTC;
			}
			set
			{
				if ((this._DiaChiNTC != value))
				{
					this.OnDiaChiNTCChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNTC = value;
					this.SendPropertyChanged("DiaChiNTC");
					this.OnDiaChiNTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQH", DbType="Int")]
		public System.Nullable<int> MaQH
		{
			get
			{
				return this._MaQH;
			}
			set
			{
				if ((this._MaQH != value))
				{
					if (this._MoiQuanHe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQHChanging(value);
					this.SendPropertyChanging();
					this._MaQH = value;
					this.SendPropertyChanged("MaQH");
					this.OnMaQHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiTiemChung_HoaDon", Storage="_HoaDons", ThisKey="MaNTC", OtherKey="MaNTC")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_NguoiTiemChung", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.NguoiTiemChungs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.NguoiTiemChungs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MoiQuanHe_NguoiTiemChung", Storage="_MoiQuanHe", ThisKey="MaQH", OtherKey="MaQH", IsForeignKey=true)]
		public MoiQuanHe MoiQuanHe
		{
			get
			{
				return this._MoiQuanHe.Entity;
			}
			set
			{
				MoiQuanHe previousValue = this._MoiQuanHe.Entity;
				if (((previousValue != value) 
							|| (this._MoiQuanHe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MoiQuanHe.Entity = null;
						previousValue.NguoiTiemChungs.Remove(this);
					}
					this._MoiQuanHe.Entity = value;
					if ((value != null))
					{
						value.NguoiTiemChungs.Add(this);
						this._MaQH = value.MaQH;
					}
					else
					{
						this._MaQH = default(Nullable<int>);
					}
					this.SendPropertyChanged("MoiQuanHe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NguoiTiemChung = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NguoiTiemChung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCC")]
	public partial class NhaCC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNCC;
		
		private string _TenNCC;
		
		private string _DiaChiNCC;
		
		private string _SoDienThoaiNCC;
		
		private EntitySet<NhapKho> _NhapKhos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(int value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiaChiNCCChanging(string value);
    partial void OnDiaChiNCCChanged();
    partial void OnSoDienThoaiNCCChanging(string value);
    partial void OnSoDienThoaiNCCChanged();
    #endregion
		
		public NhaCC()
		{
			this._NhapKhos = new EntitySet<NhapKho>(new Action<NhapKho>(this.attach_NhapKhos), new Action<NhapKho>(this.detach_NhapKhos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNCC", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChiNCC
		{
			get
			{
				return this._DiaChiNCC;
			}
			set
			{
				if ((this._DiaChiNCC != value))
				{
					this.OnDiaChiNCCChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNCC = value;
					this.SendPropertyChanged("DiaChiNCC");
					this.OnDiaChiNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoaiNCC", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SoDienThoaiNCC
		{
			get
			{
				return this._SoDienThoaiNCC;
			}
			set
			{
				if ((this._SoDienThoaiNCC != value))
				{
					this.OnSoDienThoaiNCCChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoaiNCC = value;
					this.SendPropertyChanged("SoDienThoaiNCC");
					this.OnSoDienThoaiNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCC_NhapKho", Storage="_NhapKhos", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<NhapKho> NhapKhos
		{
			get
			{
				return this._NhapKhos;
			}
			set
			{
				this._NhapKhos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhaCC = this;
		}
		
		private void detach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhaCC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _CCCD;
		
		private string _HoTenNV;
		
		private string _GioiTinhNV;
		
		private string _SoDienThoaiNV;
		
		private string _DiaChiNV;
		
		private System.Nullable<System.DateTime> _NgaySinhNV;
		
		private string _EmailNV;
		
		private string _TenTK;
		
		private EntitySet<NhapKho> _NhapKhos;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnCCCDChanging(string value);
    partial void OnCCCDChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnGioiTinhNVChanging(string value);
    partial void OnGioiTinhNVChanged();
    partial void OnSoDienThoaiNVChanging(string value);
    partial void OnSoDienThoaiNVChanged();
    partial void OnDiaChiNVChanging(string value);
    partial void OnDiaChiNVChanged();
    partial void OnNgaySinhNVChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhNVChanged();
    partial void OnEmailNVChanging(string value);
    partial void OnEmailNVChanged();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    #endregion
		
		public NhanVien()
		{
			this._NhapKhos = new EntitySet<NhapKho>(new Action<NhapKho>(this.attach_NhapKhos), new Action<NhapKho>(this.detach_NhapKhos));
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CCCD", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string CCCD
		{
			get
			{
				return this._CCCD;
			}
			set
			{
				if ((this._CCCD != value))
				{
					this.OnCCCDChanging(value);
					this.SendPropertyChanging();
					this._CCCD = value;
					this.SendPropertyChanged("CCCD");
					this.OnCCCDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinhNV", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string GioiTinhNV
		{
			get
			{
				return this._GioiTinhNV;
			}
			set
			{
				if ((this._GioiTinhNV != value))
				{
					this.OnGioiTinhNVChanging(value);
					this.SendPropertyChanging();
					this._GioiTinhNV = value;
					this.SendPropertyChanged("GioiTinhNV");
					this.OnGioiTinhNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoaiNV", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SoDienThoaiNV
		{
			get
			{
				return this._SoDienThoaiNV;
			}
			set
			{
				if ((this._SoDienThoaiNV != value))
				{
					this.OnSoDienThoaiNVChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoaiNV = value;
					this.SendPropertyChanged("SoDienThoaiNV");
					this.OnSoDienThoaiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNV", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DiaChiNV
		{
			get
			{
				return this._DiaChiNV;
			}
			set
			{
				if ((this._DiaChiNV != value))
				{
					this.OnDiaChiNVChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNV = value;
					this.SendPropertyChanged("DiaChiNV");
					this.OnDiaChiNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinhNV", DbType="Date")]
		public System.Nullable<System.DateTime> NgaySinhNV
		{
			get
			{
				return this._NgaySinhNV;
			}
			set
			{
				if ((this._NgaySinhNV != value))
				{
					this.OnNgaySinhNVChanging(value);
					this.SendPropertyChanging();
					this._NgaySinhNV = value;
					this.SendPropertyChanged("NgaySinhNV");
					this.OnNgaySinhNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailNV", DbType="VarChar(50)")]
		public string EmailNV
		{
			get
			{
				return this._EmailNV;
			}
			set
			{
				if ((this._EmailNV != value))
				{
					this.OnEmailNVChanging(value);
					this.SendPropertyChanging();
					this._EmailNV = value;
					this.SendPropertyChanged("EmailNV");
					this.OnEmailNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="VarChar(30)")]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhapKho", Storage="_NhapKhos", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<NhapKho> NhapKhos
		{
			get
			{
				return this._NhapKhos;
			}
			set
			{
				this._NhapKhos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_NhanVien", Storage="_TaiKhoan", ThisKey="TenTK", OtherKey="TenTK", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._TenTK = value.TenTK;
					}
					else
					{
						this._TenTK = default(string);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_NhapKhos(NhapKho entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhapKho")]
	public partial class NhapKho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNK;
		
		private int _MaLoVC;
		
		private System.Nullable<System.DateTime> _ThoiGianNK;
		
		private System.Nullable<int> _MaNV;
		
		private System.Nullable<int> _MaNCC;
		
		private EntityRef<LoVaccine> _LoVaccine;
		
		private EntityRef<NhaCC> _NhaCC;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNKChanging(int value);
    partial void OnMaNKChanged();
    partial void OnMaLoVCChanging(int value);
    partial void OnMaLoVCChanged();
    partial void OnThoiGianNKChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianNKChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnMaNCCChanging(System.Nullable<int> value);
    partial void OnMaNCCChanged();
    #endregion
		
		public NhapKho()
		{
			this._LoVaccine = default(EntityRef<LoVaccine>);
			this._NhaCC = default(EntityRef<NhaCC>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaNK
		{
			get
			{
				return this._MaNK;
			}
			set
			{
				if ((this._MaNK != value))
				{
					this.OnMaNKChanging(value);
					this.SendPropertyChanging();
					this._MaNK = value;
					this.SendPropertyChanged("MaNK");
					this.OnMaNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoVC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLoVC
		{
			get
			{
				return this._MaLoVC;
			}
			set
			{
				if ((this._MaLoVC != value))
				{
					if (this._LoVaccine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoVCChanging(value);
					this.SendPropertyChanging();
					this._MaLoVC = value;
					this.SendPropertyChanged("MaLoVC");
					this.OnMaLoVCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianNK", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianNK
		{
			get
			{
				return this._ThoiGianNK;
			}
			set
			{
				if ((this._ThoiGianNK != value))
				{
					this.OnThoiGianNKChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianNK = value;
					this.SendPropertyChanged("ThoiGianNK");
					this.OnThoiGianNKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="Int")]
		public System.Nullable<int> MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._NhaCC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoVaccine_NhapKho", Storage="_LoVaccine", ThisKey="MaLoVC", OtherKey="MaLoVC", IsForeignKey=true)]
		public LoVaccine LoVaccine
		{
			get
			{
				return this._LoVaccine.Entity;
			}
			set
			{
				LoVaccine previousValue = this._LoVaccine.Entity;
				if (((previousValue != value) 
							|| (this._LoVaccine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoVaccine.Entity = null;
						previousValue.NhapKhos.Remove(this);
					}
					this._LoVaccine.Entity = value;
					if ((value != null))
					{
						value.NhapKhos.Add(this);
						this._MaLoVC = value.MaLoVC;
					}
					else
					{
						this._MaLoVC = default(int);
					}
					this.SendPropertyChanged("LoVaccine");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCC_NhapKho", Storage="_NhaCC", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public NhaCC NhaCC
		{
			get
			{
				return this._NhaCC.Entity;
			}
			set
			{
				NhaCC previousValue = this._NhaCC.Entity;
				if (((previousValue != value) 
							|| (this._NhaCC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCC.Entity = null;
						previousValue.NhapKhos.Remove(this);
					}
					this._NhaCC.Entity = value;
					if ((value != null))
					{
						value.NhapKhos.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhaCC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_NhapKho", Storage="_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.NhapKhos.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.NhapKhos.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhomVaccine")]
	public partial class NhomVaccine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhom;
		
		private string _TenNhom;
		
		private System.Nullable<int> _MaLoai;
		
		private EntitySet<Vaccine> _Vaccines;
		
		private EntityRef<LoaiVaccine> _LoaiVaccine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhomChanging(int value);
    partial void OnMaNhomChanged();
    partial void OnTenNhomChanging(string value);
    partial void OnTenNhomChanged();
    partial void OnMaLoaiChanging(System.Nullable<int> value);
    partial void OnMaLoaiChanged();
    #endregion
		
		public NhomVaccine()
		{
			this._Vaccines = new EntitySet<Vaccine>(new Action<Vaccine>(this.attach_Vaccines), new Action<Vaccine>(this.detach_Vaccines));
			this._LoaiVaccine = default(EntityRef<LoaiVaccine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhom", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhom
		{
			get
			{
				return this._MaNhom;
			}
			set
			{
				if ((this._MaNhom != value))
				{
					this.OnMaNhomChanging(value);
					this.SendPropertyChanging();
					this._MaNhom = value;
					this.SendPropertyChanged("MaNhom");
					this.OnMaNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenNhom
		{
			get
			{
				return this._TenNhom;
			}
			set
			{
				if ((this._TenNhom != value))
				{
					this.OnTenNhomChanging(value);
					this.SendPropertyChanging();
					this._TenNhom = value;
					this.SendPropertyChanged("TenNhom");
					this.OnTenNhomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", DbType="Int")]
		public System.Nullable<int> MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					if (this._LoaiVaccine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhomVaccine_Vaccine", Storage="_Vaccines", ThisKey="MaNhom", OtherKey="MaNhom")]
		public EntitySet<Vaccine> Vaccines
		{
			get
			{
				return this._Vaccines;
			}
			set
			{
				this._Vaccines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiVaccine_NhomVaccine", Storage="_LoaiVaccine", ThisKey="MaLoai", OtherKey="MaLoai", IsForeignKey=true)]
		public LoaiVaccine LoaiVaccine
		{
			get
			{
				return this._LoaiVaccine.Entity;
			}
			set
			{
				LoaiVaccine previousValue = this._LoaiVaccine.Entity;
				if (((previousValue != value) 
							|| (this._LoaiVaccine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiVaccine.Entity = null;
						previousValue.NhomVaccines.Remove(this);
					}
					this._LoaiVaccine.Entity = value;
					if ((value != null))
					{
						value.NhomVaccines.Add(this);
						this._MaLoai = value.MaLoai;
					}
					else
					{
						this._MaLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiVaccine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vaccines(Vaccine entity)
		{
			this.SendPropertyChanging();
			entity.NhomVaccine = this;
		}
		
		private void detach_Vaccines(Vaccine entity)
		{
			this.SendPropertyChanging();
			entity.NhomVaccine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenTK;
		
		private string _MatKhau;
		
		private EntitySet<KhachHang> _KhachHangs;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenTKChanging(string value);
    partial void OnTenTKChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._KhachHangs = new EntitySet<KhachHang>(new Action<KhachHang>(this.attach_KhachHangs), new Action<KhachHang>(this.detach_KhachHangs));
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTK", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenTK
		{
			get
			{
				return this._TenTK;
			}
			set
			{
				if ((this._TenTK != value))
				{
					this.OnTenTKChanging(value);
					this.SendPropertyChanging();
					this._TenTK = value;
					this.SendPropertyChanged("TenTK");
					this.OnTenTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_KhachHang", Storage="_KhachHangs", ThisKey="TenTK", OtherKey="TenTK")]
		public EntitySet<KhachHang> KhachHangs
		{
			get
			{
				return this._KhachHangs;
			}
			set
			{
				this._KhachHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_NhanVien", Storage="_NhanViens", ThisKey="TenTK", OtherKey="TenTK")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_KhachHangs(KhachHang entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
}
#pragma warning restore 1591
